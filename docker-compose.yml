services:
  postgres:
    image: postgres:13.3
    env_file:
      - .env
    ports:
      - '${POSTGRES_PORT}:5432'
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    networks:
      - my_network
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - ./redisdata:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: always
    networks:
      - my_network
  app:
    build: .
    ports:
      - "8000:8000"
    command: >
      sh -c "python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    env_file: ".env"
    depends_on:
      postgres:
        condition: service_healthy
        restart: true
      redis:
        condition: service_healthy
        restart: true
    networks:
      - my_network

networks:
  my_network:
    driver: bridge